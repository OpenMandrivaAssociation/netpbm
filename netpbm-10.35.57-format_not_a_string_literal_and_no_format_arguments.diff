diff -Naurp netpbm-10.56.03/converter/other/fiasco/params.c netpbm-10.56.03.oden/converter/other/fiasco/params.c
--- netpbm-10.56.03/converter/other/fiasco/params.c	2011-11-11 12:23:46.000000000 +0100
+++ netpbm-10.56.03.oden/converter/other/fiasco/params.c	2011-11-19 12:11:58.301947257 +0100
@@ -655,7 +655,7 @@ usage (const param_t *params, const char
     fprintf (stderr, "Usage: %s [OPTION]...%s\n", progname,
              non_opt_string ? non_opt_string : " ");
     if (synopsis != NULL)
-        fprintf (stderr, synopsis);
+        fprintf (stderr, "%s", synopsis);
     fprintf (stderr, "\n\n");
     fprintf (stderr, "Mandatory or optional arguments to long options "
              "are mandatory or optional\nfor short options too. "
diff -Naurp netpbm-10.56.03/converter/other/fiasco/pnmtofiasco.c netpbm-10.56.03.oden/converter/other/fiasco/pnmtofiasco.c
--- netpbm-10.56.03/converter/other/fiasco/pnmtofiasco.c	2011-11-11 12:23:46.000000000 +0100
+++ netpbm-10.56.03.oden/converter/other/fiasco/pnmtofiasco.c	2011-11-19 12:11:02.210718938 +0100
@@ -169,7 +169,7 @@ main (int argc, char **argv)
       return 0;
    else
    {
-      fprintf (stderr, fiasco_get_error_message ());
+      fprintf (stderr, "%s", fiasco_get_error_message ());
       fprintf (stderr, "\n");
       return 1;
    }
diff -Naurp netpbm-10.56.03/converter/other/tifftopnm.c netpbm-10.56.03.oden/converter/other/tifftopnm.c
--- netpbm-10.56.03/converter/other/tifftopnm.c	2011-11-19 12:12:48.267676011 +0100
+++ netpbm-10.56.03.oden/converter/other/tifftopnm.c	2011-11-19 12:11:02.212718646 +0100
@@ -1459,7 +1459,7 @@ convertRasterInMemory(pnmOut *       con
         int ok;
         ok = TIFFRGBAImageOK(tif, emsg);
         if (!ok) {
-            pm_message(emsg);
+            pm_message("%s", emsg);
             *statusP = CONV_UNABLE;
         } else {
             uint32 * raster;
@@ -1479,14 +1479,14 @@ convertRasterInMemory(pnmOut *       con
                 
                 ok = TIFFRGBAImageBegin(&img, tif, stopOnErrorFalse, emsg);
                 if (!ok) {
-                    pm_message(emsg);
+                    pm_message("%s", emsg);
                     *statusP = CONV_FAILED;
                 } else {
                     int ok;
                     ok = TIFFRGBAImageGet(&img, raster, cols, rows);
                     TIFFRGBAImageEnd(&img) ;
                     if (!ok) {
-                        pm_message(emsg);
+                        pm_message("%s", emsg);
                         *statusP = CONV_FAILED;
                     } else {
                         *statusP = CONV_DONE;
diff -Naurp netpbm-10.56.03/converter/pbm/cmuwmtopbm.c netpbm-10.56.03.oden/converter/pbm/cmuwmtopbm.c
--- netpbm-10.56.03/converter/pbm/cmuwmtopbm.c	2011-11-19 12:12:48.338667511 +0100
+++ netpbm-10.56.03.oden/converter/pbm/cmuwmtopbm.c	2011-11-19 12:11:02.213718500 +0100
@@ -39,20 +39,20 @@ readCmuwmHeader(FILE *         const ifP
 
     rc = pm_readbiglong(ifP, &l);
     if (rc == -1 )
-        pm_error(initReadError);
+        pm_error("%s", initReadError);
     if (l != CMUWM_MAGIC)
         pm_error("bad magic number in CMU window manager file");
     rc = pm_readbiglong(ifP, &l);
     if (rc == -1)
-        pm_error(initReadError);
+        pm_error("%s", initReadError);
     *colsP = l;
     rc = pm_readbiglong(ifP, &l);
     if (rc == -1 )
-        pm_error(initReadError);
+        pm_error("%s", initReadError);
     *rowsP = l;
     rc = pm_readbigshort(ifP, &s);
     if (rc == -1)
-        pm_error(initReadError);
+        pm_error("%s", initReadError);
     *depthP = s;
 }
 
diff -Naurp netpbm-10.56.03/converter/pbm/pbmtocmuwm.c netpbm-10.56.03.oden/converter/pbm/pbmtocmuwm.c
--- netpbm-10.56.03/converter/pbm/pbmtocmuwm.c	2011-11-11 12:23:54.000000000 +0100
+++ netpbm-10.56.03.oden/converter/pbm/pbmtocmuwm.c	2011-11-19 12:11:02.214718354 +0100
@@ -31,16 +31,16 @@ putinit(unsigned int const rows,
 
     rc = pm_writebiglong(stdout, CMUWM_MAGIC);
     if (rc == -1)
-        pm_error(initWriteError);
+        pm_error("%s", initWriteError);
     rc = pm_writebiglong(stdout, cols);
     if (rc == -1)
-        pm_error(initWriteError);
+        pm_error("%s", initWriteError);
     rc = pm_writebiglong(stdout, rows);
     if (rc == -1)
-        pm_error(initWriteError);
+        pm_error("%s", initWriteError);
     rc = pm_writebigshort(stdout, (short) 1);
     if (rc == -1)
-        pm_error(initWriteError);
+        pm_error("%s", initWriteError);
 }
 
 
